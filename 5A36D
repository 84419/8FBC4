local a=getupvalues or debug.getupvalues;local b=getconstants or debug.getconstants;assert(getgc and a and b,"Functions: getgc/getupvalues/getconstants")local a={["function"]={Name=function(a,b)return(debug.info(a,"n")or"")==b end,Upvalues=function(a,b)local a,b=pcall(function()local a=debug.getupvalues(a)local c=0;for d=1,#b do c+=(table.find(a,b[d])and 1)or 0 end;return#b==c end)return a end,Constants=function(a,b)local a,b=pcall(function()local a=debug.getconstants(a)local c=0;for d=1,#b do c+=(table.find(a,b[d])and 1)or 0 end;return#b==c end)return a end};["table"]={Keys=function(a,b)for a in next,a do if not b[a]then return false end end;return true end,Values=function(a,b)for a,a in next,a do if not table.find(b,a)then return false end end;return true end,KeyValuePairs=function(a,b)for a,c in next,a do if b[a]~=c then return false end end;return true end,Select=function(a,b)local c=0;for d=1,#b do c+=(rawget(a,b[d])~=nil and 1)or 0 end;return#b==c end}}local function b(b,c,d)d=(d==nil)or d;assert(#c==0,"There should be atleast 1 option")local e={}local f=getgc(true)for g=1,#f do local f=f[g]if typeof(f)==b then local b=0;local g=0;for c,d in next,c do b+=1;g+=(a[typeof(f)][c](f,d)and 1)or 0 end;if b==g then if d then return f else table.insert(e,f)end end end end;return(#e~=0 and e)or nil end;return b
